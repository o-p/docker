version: '3'
services:

  web:
    container_name: web-server
    image: "nginx:latest"
    volumes:
      - ../:/app/
      - ./site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./log/:/kkcorp/logs/
    depends_on:
      - php
    networks:
      - backend
    expose:
      - "80"
    ports:
      - "9487:80"

  php:
    container_name: web-app
    image: php:entrypoint
    volumes:
      - ../:/app/
      - ./log/:/kkcorp/logs/
      - ./secret/:/kkcorp/kksecret/
    depends_on:
      - redis
      - db
      - ldap
    networks:
      - backend
    expose:
      - "9000"

  ldap:
    container_name: ldap
    image: "osixia/openldap:latest"
    networks:
        - backend
    environment:
      LDAP_ORGANISATION: "Fake Company"
      LDAP_DOMAIN: "ldap.docker"
      LDAP_BASE_DN: "dc=ldap,dc=docker"
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_READONLY_USER: "true"
      LDAP_READONLY_USER_USERNAME: "chris"
      LDAP_READONLY_USER_PASSWORD: "123"
    volumes:
      # LDAP database files
      - ldap-db:/var/lib/ldap
      # LDAP config files
      - ldap-config:/etc/ldap/slapd.d
    ports:
      - "389:389"
    domainname: "ldap.docker" # important: same as hostname
    hostname: "ldap.docker"

  db:
    container_name: mysql
    image: "mysql:5.7.22"
    volumes:
      - mysql57:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123
    networks:
      - backend
    expose:
      - "3306/tcp"
    ports:
      - "6033:3306/tcp" # 讓 local 可以直接操作 DB

  redis:
    container_name: redis
    image: "redis:4.0.10"
    volumes:
      - redis:/data
    networks:
      - backend
    expose:
      - "6379"
    ports:
      - "6379:6379" # as redis default

networks:
  backend: # connect between machines

volumes:
  mysql57:
  redis:
  ldap-db:
  ldap-config:
